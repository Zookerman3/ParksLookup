// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParksLookupApi.Models;

#nullable disable

namespace ParksLookupApi.Migrations
{
    [DbContext(typeof(ParksLookupApiContext))]
    [Migration("20230409184629_Reviews")]
    partial class Reviews
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ParksLookupApi.Models.Park", b =>
                {
                    b.Property<int>("ParkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ParkId");

                    b.ToTable("Parks");

                    b.HasData(
                        new
                        {
                            ParkId = 1,
                            Name = "Yellowstone",
                            State = "Wyoming"
                        },
                        new
                        {
                            ParkId = 2,
                            Name = "Grand Canyon",
                            State = "Arizona"
                        },
                        new
                        {
                            ParkId = 3,
                            Name = "Glacier",
                            State = "Montana"
                        },
                        new
                        {
                            ParkId = 4,
                            Name = "Zion",
                            State = "Utah"
                        },
                        new
                        {
                            ParkId = 5,
                            Name = "Denali",
                            State = "Alaska"
                        });
                });

            modelBuilder.Entity("ParksLookupApi.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("ParkId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.HasKey("ReviewId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Description = "Words Would go here",
                            ParkId = 1,
                            Rating = 1,
                            Title = "Yellowstone Review"
                        },
                        new
                        {
                            ReviewId = 2,
                            Description = "Words Would go here",
                            ParkId = 2,
                            Rating = 2,
                            Title = "Grand Canyon Review"
                        },
                        new
                        {
                            ReviewId = 3,
                            Description = "Words Would go here",
                            ParkId = 3,
                            Rating = 3,
                            Title = "Glaciers Review"
                        },
                        new
                        {
                            ReviewId = 4,
                            Description = "Words Would go here",
                            ParkId = 4,
                            Rating = 4,
                            Title = "Zion Review"
                        },
                        new
                        {
                            ReviewId = 5,
                            Description = "Words Would go here",
                            ParkId = 5,
                            Rating = 5,
                            Title = "Denali Review"
                        });
                });

            modelBuilder.Entity("ParksLookupApi.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "admin",
                            Name = "JoeMama",
                            Password = "password"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
